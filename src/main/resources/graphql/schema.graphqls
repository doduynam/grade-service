type Query {
    submit(submission: SubmitRequest): SubmitResponse
}

type SubmitRequest {
    testAttempts: [TestAttemptQuery!]!
}

type TestAttemptQuery {
    id: Int
    userId: Int!
    originalTestId: Int!
    state: Int
    startedAt: String!
    endedAt: String!

    attempt: AttemptQuery!
}

type AttemptQuery {
    id: Int
    title: String!
    testType: Int
    testLevel: Int

    sections: [SectionQuery!]!
}

type SectionQuery {
    id: Int
    attemptId: Int!
    sectionIndex: Int!
    sectionType: Int

    templates: [TemplateQuery!]!

}

type TemplateQuery {
    id: Int
    templateTypeId: Int!
    sectionId: Int!
    templateIndex: Int!
    title: String
    content: String
    expandColumn: String

    questions: [QuestionQuery!]!
}

type QuestionQuery {
    id: Int
    templateId: Int!
    questionIndex: Int!
    content: String
    options: String
    score: Int!

    answers: [AnswerQuery!]!
}

type AnswerQuery {
    id: Int
    questionId: Int!
    content: String!
    options: String
}

type SubmitResponse {
    score: Int!

    sectionResults: [SectionResult!]!
}

type SectionResult {

    sectionIndex: Int!
    score: Int!

    templateResults: [TemplateResult!]!
}

type TemplateResult {

    templateIndex: Int!
    score: Int!

    resultComparisons: [ResultComparison!]!
}

type ResultComparison {
    questionIndex: Int!
    score: Int!
    isCorrect: Boolean!
    userSubmissionAnswer: String!
    correctAnswers: [String!]!
}











